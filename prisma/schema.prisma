generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Flashcard {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  front  String   @db.String
  back   String   @db.String
  hint   String?  @db.String
  tags   String[]
  User   User?    @relation(fields: [userId], references: [id])
  userId String?  @db.ObjectId

  @@map("flashcards")
}

model User {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  username      String?
  email         String?     @unique
  emailVerified DateTime?   @map("emailVerifiedAt")
  image         String?
  accounts      Account[]
  sessions      Session[]
  flashcards    Flashcard[]

  @@map("users")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime @map("expiresAt")
  user         User     @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime @map("expiresAt")

  @@unique([identifier, token])
  @@map("verification_tokens")
}
